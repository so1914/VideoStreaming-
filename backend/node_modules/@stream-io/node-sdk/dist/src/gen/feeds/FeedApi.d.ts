import { StreamResponse, FeedsApi } from '../../gen-imports';
import { AcceptFeedMemberInviteRequest, AcceptFeedMemberInviteResponse, DeleteFeedResponse, GetOrCreateFeedRequest, GetOrCreateFeedResponse, MarkActivityRequest, PinActivityRequest, PinActivityResponse, QueryFeedMembersRequest, QueryFeedMembersResponse, RejectFeedMemberInviteRequest, RejectFeedMemberInviteResponse, Response, UnpinActivityResponse, UpdateFeedMembersRequest, UpdateFeedMembersResponse, UpdateFeedRequest, UpdateFeedResponse } from '../models';
export declare class FeedApi {
    protected feedsApi: FeedsApi;
    readonly group: string;
    readonly id: string;
    constructor(feedsApi: FeedsApi, group: string, id: string);
    delete(request?: {
        hard_delete?: boolean;
    }): Promise<StreamResponse<DeleteFeedResponse>>;
    getOrCreate(request?: GetOrCreateFeedRequest): Promise<StreamResponse<GetOrCreateFeedResponse>>;
    update(request?: UpdateFeedRequest): Promise<StreamResponse<UpdateFeedResponse>>;
    markActivity(request?: MarkActivityRequest): Promise<StreamResponse<Response>>;
    unpinActivity(request: {
        activity_id: string;
        user_id?: string;
    }): Promise<StreamResponse<UnpinActivityResponse>>;
    pinActivity(request: PinActivityRequest & {
        activity_id: string;
    }): Promise<StreamResponse<PinActivityResponse>>;
    updateFeedMembers(request: UpdateFeedMembersRequest): Promise<StreamResponse<UpdateFeedMembersResponse>>;
    acceptFeedMemberInvite(request?: AcceptFeedMemberInviteRequest): Promise<StreamResponse<AcceptFeedMemberInviteResponse>>;
    queryFeedMembers(request?: QueryFeedMembersRequest): Promise<StreamResponse<QueryFeedMembersResponse>>;
    rejectFeedMemberInvite(request?: RejectFeedMemberInviteRequest): Promise<StreamResponse<RejectFeedMemberInviteResponse>>;
}
