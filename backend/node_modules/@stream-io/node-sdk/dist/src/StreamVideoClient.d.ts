import { ApiClient } from './ApiClient';
import { VideoApi } from './gen/video/VideoApi';
import { StreamCall } from './StreamCall';
import type { StreamClient } from './StreamClient';
/** @ts-ignore Optional dependency */
import type { RealtimeAPIModel, RealtimeClient } from '@stream-io/openai-realtime-api';
export declare class StreamVideoClient extends VideoApi {
    private readonly streamClient;
    constructor({ streamClient, apiClient, }: {
        streamClient: StreamClient;
        apiClient: ApiClient;
    });
    call: (type: string, id: string) => StreamCall;
    connectOpenAi: (options: {
        call: StreamCall;
        agentUserId: string;
        openAiApiKey: string;
        model?: RealtimeAPIModel;
        validityInSeconds?: number;
    }) => Promise<RealtimeClient>;
}
